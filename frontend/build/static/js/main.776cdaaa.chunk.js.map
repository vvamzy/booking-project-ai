{"version":3,"sources":["api/apiClient.ts","utils/dateUtils.ts","components/BookingsList.tsx","stores/bookingStore.tsx","components/ApprovalQueue.tsx","components/SuggestionsModal.tsx","hooks/useAuth.ts","stores/authStore.tsx","pages/Dashboard.tsx","components/PurposeClarifyModal.tsx","components/BookingForm.tsx","pages/BookingPage.tsx","components/Navigation.tsx","pages/AdminAnalytics.tsx","pages/AdminPanel.tsx","components/PrivateRoute.tsx","pages/Login.tsx","App.tsx","index.tsx"],"names":["BASE_URL","process","API_BASE_URL","concat","API_TIMEOUT","parseInt","REACT_APP_API_TIMEOUT","MAX_RETRIES","REACT_APP_MAX_RETRIES","RETRY_DELAY","REACT_APP_RETRY_DELAY","ApiError","Error","constructor","status","message","data","super","this","name","Object","setPrototypeOf","prototype","axios","defaults","withCredentials","apiClient","create","baseURL","timeout","headers","interceptors","response","use","async","_error$response","_error$response2","_error$response3","_error$response3$data","_error$response4","config","error","retries","Promise","resolve","setTimeout","getRooms","get","getRoom","roomId","bookRoom","payload","_objectSpread","bookingData","userId","priority","notes","attendeesCount","requiredFacilities","post","getAllBookings","getPendingApprovals","updateBookingStatus","bookingId","action","comments","cancelBooking","cancelledBy","arguments","length","undefined","reason","put","params","getAiDecision","validateBooking","requestAiAnalysis","updateBooking","checkAvailability","startIso","endIso","start","end","getSuggestions","capacity","getAdminAnalyticsOverview","parseServerDateString","s","str","String","trim","endsWith","test","d","Date","isNaN","getTime","m","match","year","month","day","hour","minute","second","toServerIsoFromLocal","pad","n","toString","padStart","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","formatDateLocal","dateStr","toLocaleDateString","formatTimeLocal","toLocaleTimeString","formatDateTimeLocal","toLocaleString","BookingsList","_ref","refreshKey","showAiDecisions","bookings","setBookings","useState","rooms","setRooms","loading","setLoading","setError","load","bookingsData","roomsData","all","roomsMap","forEach","room","id","pendingStatuses","pendingBookings","filter","b","includes","map","aiDecision","booking","decision","confidence","rationale","err","console","warn","useEffect","_jsx","className","children","role","_jsxs","location","startTime","endTime","purpose","eqId","_room$equipment$find","equipment","find","e","Boolean","join","toUpperCase","toFixed","onClick","_booking$aiDecision","alert","newPurpose","prompt","api","confirm","initialState","BookingContext","createContext","bookingReducer","state","type","BookingProvider","dispatch","useReducer","value","loadBookings","useCallback","loadRooms","createBooking","request","newBooking","apiBookRoom","handleBookingApproval","actionLower","toLowerCase","refreshAiDecision","Provider","useBooking","context","useContext","ApprovalQueue","onApprovalUpdate","processing","setProcessing","handleBookingAction","prev","r","isProcessing","equipmentList","disabled","_Fragment","SuggestionsModal","show","onClose","suggestions","onQuickBook","tabIndex","style","background","nextSlots","idx","alternateRooms","slice","sort","a","capDiffA","Math","abs","requestedCapacity","capDiffB","locA","requestedLocation","locB","amenitiesA","Set","amenities","amenitiesB","req","requestedAmenities","overlapA","overlapB","has","alt","minWidth","score","availableFrom","parsed","useAuth","user","setUser","API_ROOT","fetch","credentials","ok","json","msg","fetchUser","login","method","body","JSON","stringify","txt","text","catch","logout","AuthContext","useAuthContext","ctx","AuthProvider","auth","Dashboard","history","useHistory","activeTab","setActiveTab","isAdmin","roles","authorities","Array","isArray","some","authority","filterStatus","setFilterStatus","filterDate","setFilterDate","filterStartTime","setFilterStartTime","filterLocation","setFilterLocation","availabilityMap","setAvailabilityMap","setSuggestions","showSuggestionsModal","setShowSuggestionsModal","suggestionRoom","setSuggestionRoom","init","tab","URLSearchParams","window","search","handleRefresh","localStart","toISOString","res","available","compute","onChange","target","placeholder","push","keys","mapped","_available","filterRooms","min","PurposeClarifyModal","initialPurpose","onConfirm","setPurpose","React","i","rows","BookingForm","onCreated","initialRoomId","selectedRoomId","setSelectedRoomId","date","setDate","split","setStartTime","setEndTime","attendees","setAttendees","selectedEquipment","setSelectedEquipment","isSubmitting","setIsSubmitting","setMessage","showPurposeModal","setShowPurposeModal","purposeRationale","setPurposeRationale","selectedRoom","onSubmit","preventDefault","validationError","validateForm","_toServerIsoFromLocal","_toServerIsoFromLocal2","bookingRequest","val","valid","created","Number","required","minLength","max","item","checked","htmlFor","quickReq","BookingPage","useParams","Navigation","useLocation","Link","to","pathname","startsWith","username","AdminAnalytics","setData","topRooms","count","util","utilization","round","colors","width","height","ResponsiveContainer","BarChart","layout","XAxis","YAxis","dataKey","Tooltip","Bar","fill","entry","index","Cell","domain","unit","formatter","v","recommendations","aiInsightsError","aiInsights","insights","aiInsightsRaw","whiteSpace","AdminPanel","PrivateRoute","component","Component","requiredRole","rest","_objectWithoutProperties","_excluded","hasRole","Route","render","props","Redirect","Login","setUsername","password","setPassword","AuthGate","from","App","Router","Switch","path","exact","rootElement","document","getElementById","ReactDOM","StrictMode"],"mappings":"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","file":"static/js/main.776cdaaa.chunk.js","sourcesContent":["import axios, { AxiosError } from 'axios';\nimport { Room, Booking, BookingRequest, Approval } from '../types';\n\nconst BASE_URL = process.env.REACT_APP_API_URL || '';\nconst API_BASE_URL = `${BASE_URL}/api`;\nconst API_TIMEOUT = parseInt(process.env.REACT_APP_API_TIMEOUT || '30000', 10);\nconst MAX_RETRIES = parseInt(process.env.REACT_APP_MAX_RETRIES || '3', 10);\nconst RETRY_DELAY = parseInt(process.env.REACT_APP_RETRY_DELAY || '1000', 10);\n\ntype ApiErrorData = {\n    status: number;\n    data?: any;\n};\n\nclass ApiError extends Error {\n    status: number;\n     data: any | undefined;\n\n    constructor(status: number, message: string, data?: any) {\n        super(message);\n        this.name = 'ApiError';\n        this.status = status;\n        this.data = data;\n        Object.setPrototypeOf(this, ApiError.prototype);\n    }\n}\n\n// Ensure axios sends cookies for session-based auth\naxios.defaults.withCredentials = true;\n\nconst apiClient = axios.create({\n    baseURL: API_BASE_URL,\n    timeout: API_TIMEOUT,\n    headers: {\n        'Content-Type': 'application/json',\n    },\n    withCredentials: true,\n});\n\n// Request interceptor for handling retries\napiClient.interceptors.response.use(\n    (response) => response,\n    async (error: AxiosError) => {\n       const config: any = error.config || {};\n        config.retries = config.retries || 0;\n\n        if (config.retries < MAX_RETRIES && (error.response?.status || 500) >= 500) {\n            config.retries += 1;\n            await new Promise(resolve => setTimeout(resolve, RETRY_DELAY));\n            return apiClient(config);\n        }\n\n\n        const status = error.response?.status || 500;\n        const message = error.response?.data?.message || error.message;\n        const data = error.response?.data;\n\n        throw new ApiError(status, message, data);\n    }\n);\n\n// Function to get all rooms\nexport const getRooms = async (): Promise<Room[]> => {\n    try {\n        const response = await axios.get(`${BASE_URL}/api/rooms`);\n        return response.data;\n    } catch (error) {\n        if (error instanceof ApiError) throw error;\n        throw new ApiError(500, 'Failed to fetch rooms');\n    }\n};\n\n// Function to get room by id\nexport const getRoom = async (roomId: number): Promise<Room> => {\n    try {\n        const response = await axios.get(`${BASE_URL}/api/rooms/${roomId}`);\n        return response.data;\n    } catch (error) {\n        if (error instanceof ApiError) throw error;\n        throw new ApiError(500, 'Failed to fetch room');\n    }\n};\n\n// Function to book a room\nexport const bookRoom = async (bookingData: BookingRequest): Promise<Booking> => {\n    try {\n        // Remove any client-supplied userId to avoid impersonation; backend will infer from session\n        const payload = { ...bookingData };\n        delete payload.userId;\n        payload.priority = bookingData.priority || 3;\n        payload.notes = bookingData.notes || '';\n        payload.attendeesCount = bookingData.attendeesCount;\n        payload.requiredFacilities = bookingData.requiredFacilities;\n\n        const response = await axios.post(`${BASE_URL}/api/bookings`, payload);\n        return response.data;\n    } catch (error) {\n        if (error instanceof ApiError) throw error;\n        throw new ApiError(500, 'Failed to create booking');\n    }\n};\n\n// Function to get all bookings\nexport const getAllBookings = async (): Promise<Booking[]> => {\n    try {\n        const response = await axios.get(`${BASE_URL}/api/bookings`);\n        return response.data;\n    } catch (error) {\n        if (error instanceof ApiError) throw error;\n        throw new ApiError(500, 'Failed to fetch bookings');\n    }\n};\n\n// Function to get pending approvals\nexport const getPendingApprovals = async (): Promise<Booking[]> => {\n    try {\n        const response = await axios.get(`${BASE_URL}/api/bookings/pending`);\n        return response.data;\n    } catch (error) {\n        if (error instanceof ApiError) throw error;\n        throw new ApiError(500, 'Failed to fetch pending approvals');\n    }\n};\n\n// Function to handle booking approval/rejection\nexport const updateBookingStatus = async (\n    bookingId: number,\n    action: 'approve' | 'reject',\n    comments?: string\n): Promise<Approval> => {\n    try {\n        const response = await axios.post(`${BASE_URL}/api/bookings/${bookingId}/${action}`, { comments });\n        return response.data;\n    } catch (error) {\n        if (error instanceof ApiError) throw error;\n        throw new ApiError(500, `Failed to ${action} booking`);\n    }\n};\n\n// cancel booking\nexport const cancelBooking = async (bookingId: number, cancelledBy = 'user', reason?: string): Promise<void> => {\n    try {\n        await axios.put(`${BASE_URL}/api/bookings/${bookingId}/cancel`, null, { params: { cancelledBy, reason } });\n    } catch (error) {\n        if (error instanceof ApiError) throw error;\n        throw new ApiError(500, 'Failed to cancel booking');\n    }\n};\n\n// Function to get AI decision for a booking\nexport const getAiDecision = async (bookingId: number): Promise<Booking['aiDecision']> => {\n    try {\n        const response = await axios.get(`${BASE_URL}/api/bookings/${bookingId}/ai-decision`);\n        return response.data;\n    } catch (error) {\n        if (error instanceof ApiError) throw error;\n        throw new ApiError(500, 'Failed to fetch AI decision');\n    }\n};\n\n// Validate a booking payload using AI/rules (without creating)\nexport const validateBooking = async (bookingData: BookingRequest): Promise<any> => {\n    try {\n        const payload = { ...bookingData };\n        delete payload.userId;\n        const response = await axios.post(`${BASE_URL}/api/bookings/validate`, payload);\n        return response.data;\n    } catch (error) {\n        if (error instanceof ApiError) throw error;\n        throw new ApiError(500, 'Failed to validate booking');\n    }\n};\n\n// Function to request a new AI analysis\nexport const requestAiAnalysis = async (bookingId: number): Promise<Booking['aiDecision']> => {\n    try {\n        const response = await axios.post(`${BASE_URL}/api/bookings/${bookingId}/analyze`);\n        return response.data;\n    } catch (error) {\n        if (error instanceof ApiError) throw error;\n        throw new ApiError(500, 'Failed to analyze booking');\n    }\n};\n\n// Function to update a booking\nexport const updateBooking = async (\n    bookingId: number,\n    bookingData: Partial<BookingRequest>\n): Promise<Booking> => {\n    try {\n        const response = await axios.put(`${BASE_URL}/api/bookings/${bookingId}`, {\n            ...bookingData,\n            status: bookingData.status || 'PENDING',\n            priority: bookingData.priority || 3,\n            notes: bookingData.notes || '',\n            attendeesCount: bookingData.attendeesCount,\n            requiredFacilities: bookingData.requiredFacilities\n        });\n        return response.data;\n    } catch (error) {\n        if (error instanceof ApiError) throw error;\n        throw new ApiError(500, 'Failed to update booking');\n    }\n};\n\n// Check availability for a room for a time range\nexport const checkAvailability = async (roomId: number, startIso: string, endIso: string): Promise<{ available: boolean; overlaps: Booking[] }> => {\n    try {\n        const response = await axios.get(`${BASE_URL}/api/bookings/availability`, { params: { roomId, start: startIso, end: endIso } });\n        return response.data;\n    } catch (error) {\n        if (error instanceof ApiError) throw error;\n        throw new ApiError(500, 'Failed to check availability');\n    }\n};\n\n// Get suggestions for next slots and alternate rooms\nexport const getSuggestions = async (roomId: number, startIso: string, endIso: string, capacity?: number) => {\n    try {\n        const response = await axios.get(`${BASE_URL}/api/bookings/suggest`, { params: { roomId, start: startIso, end: endIso, capacity } });\n        return response.data;\n    } catch (error) {\n        if (error instanceof ApiError) throw error;\n        throw new ApiError(500, 'Failed to get suggestions');\n    }\n};\n\n// Admin analytics overview\nexport const getAdminAnalyticsOverview = async (): Promise<any> => {\n    try {\n        const response = await axios.get(`${BASE_URL}/api/admin/analytics/overview`);\n        return response.data;\n    } catch (error) {\n        if (error instanceof ApiError) throw error;\n        throw new ApiError(500, 'Failed to fetch analytics');\n    }\n};\n\nexport default apiClient;","// Utilities to normalize parsing and formatting of dates from server and local inputs\r\nexport function parseServerDateString(s?: string | null): Date | null {\r\n  if (!s) return null;\r\n  const str = String(s).trim();\r\n  // If it contains timezone info (Z or + or - offset), use native parse\r\n  if (str.endsWith('Z') || /[+-]\\d{2}:?\\d{2}$/.test(str)) {\r\n    const d = new Date(str);\r\n    return isNaN(d.getTime()) ? null : d;\r\n  }\r\n  // Otherwise assume server sent a local datetime like '2025-10-11T05:30:00'\r\n  // Parse components and create a Date in the local timezone matching those fields\r\n  const m = str.match(/^(\\d{4})-(\\d{2})-(\\d{2})T(\\d{2}):(\\d{2})(?::(\\d{2}))?/);\r\n  if (m) {\r\n    const year = parseInt(m[1], 10);\r\n    const month = parseInt(m[2], 10) - 1;\r\n    const day = parseInt(m[3], 10);\r\n    const hour = parseInt(m[4], 10);\r\n    const minute = parseInt(m[5], 10);\r\n    const second = m[6] ? parseInt(m[6], 10) : 0;\r\n    return new Date(year, month, day, hour, minute, second);\r\n  }\r\n  const d = new Date(str);\r\n  return isNaN(d.getTime()) ? null : d;\r\n}\r\n\r\nexport function toServerIsoFromLocal(d?: Date | null): string | null {\r\n  if (!d) return null;\r\n  // Return a server-local ISO-like string without timezone offset so backend interprets it as LocalDateTime\r\n  const pad = (n: number) => n.toString().padStart(2, '0');\r\n  const year = d.getFullYear();\r\n  const month = pad(d.getMonth() + 1);\r\n  const day = pad(d.getDate());\r\n  const hour = pad(d.getHours());\r\n  const minute = pad(d.getMinutes());\r\n  const second = pad(d.getSeconds());\r\n  return `${year}-${month}-${day}T${hour}:${minute}:${second}`;\r\n}\r\n\r\nexport function formatDateLocal(dateStr?: string | null): string {\r\n  const d = parseServerDateString(dateStr);\r\n  return d ? d.toLocaleDateString() : '';\r\n}\r\n\r\nexport function formatTimeLocal(dateStr?: string | null): string {\r\n  const d = parseServerDateString(dateStr);\r\n  return d ? d.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' }) : '';\r\n}\r\n\r\nexport function formatDateTimeLocal(dateStr?: string | null): string {\r\n  const d = parseServerDateString(dateStr);\r\n  return d ? d.toLocaleString() : '';\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport { getAllBookings, getRooms, getAiDecision } from '../api/apiClient';\r\nimport { Booking, Room } from '../types';\r\nimport { formatDateLocal, formatTimeLocal } from '../utils/dateUtils';\r\nimport '../styles/BookingsList.css';\r\n\r\ntype Props = {\r\n    refreshKey?: number;\r\n    showAiDecisions?: boolean;\r\n}\r\n\r\nconst BookingsList: React.FC<Props> = ({ refreshKey, showAiDecisions = true }) => {\r\n    const [bookings, setBookings] = useState<Booking[]>([]);\r\n    const [rooms, setRooms] = useState<Record<number, Room>>({});\r\n    const [loading, setLoading] = useState(true);\r\n    const [error, setError] = useState<string | null>(null);\r\n\r\n    const load = async () => {\r\n        setLoading(true);\r\n        setError(null);\r\n        try {\r\n            const [bookingsData, roomsData] = await Promise.all([\r\n                getAllBookings(),\r\n                getRooms()\r\n            ]);\r\n\r\n            const roomsMap: Record<number, Room> = {};\r\n            roomsData.forEach((room: Room) => roomsMap[room.id] = room);\r\n            \r\n            // If AI decisions are enabled, fetch them for pending bookings\r\n            if (showAiDecisions) {\r\n                const pendingStatuses = ['PENDING', 'PENDING_APPROVAL'];\r\n                const pendingBookings = bookingsData.filter(b => pendingStatuses.includes(String(b.status)));\r\n                await Promise.all(\r\n                    pendingBookings.map(async (booking) => {\r\n                        try {\r\n                            const aiDecision = await getAiDecision(booking.id);\r\n                            if (aiDecision) {\r\n                                booking.aiDecision = {\r\n                                    decision: aiDecision.decision,\r\n                                    confidence: aiDecision.confidence,\r\n                                    rationale: aiDecision.rationale\r\n                                };\r\n                            }\r\n                        } catch (err) {\r\n                            console.warn(`Could not fetch AI decision for booking ${booking.id}:`, err);\r\n                        }\r\n                    })\r\n                );\r\n            }\r\n\r\n            setBookings(bookingsData);\r\n            setRooms(roomsMap);\r\n        } catch (err) {\r\n            console.error('Failed to load bookings:', err);\r\n            setError('Failed to load bookings. Please try again.');\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    useEffect(() => { \r\n        load(); \r\n    }, [refreshKey, showAiDecisions]);\r\n\r\n    if (loading) {\r\n        return (\r\n            <div className=\"text-center p-4\">\r\n                <div className=\"spinner-border text-primary\" role=\"status\">\r\n                    <span className=\"visually-hidden\">Loading...</span>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    if (error) {\r\n        return (\r\n            <div className=\"alert alert-danger\">\r\n                {error}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    if (!bookings || bookings.length === 0) {\r\n        return (\r\n            <div className=\"alert alert-info text-center\">\r\n                No bookings found.\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div className=\"bookings-list\">\r\n            <div className=\"table-responsive\">\r\n                <table className=\"table table-bordered bookings-table\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Booking ID</th>\r\n                            <th>Room</th>\r\n                            <th>Time</th>\r\n                            <th>Purpose</th>\r\n                            <th>Attendees</th>\r\n                            <th>Status</th>\r\n                            {showAiDecisions && <th>AI Decision</th>}\r\n                            <th>Actions</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {bookings.map(booking => {\r\n                            const room = rooms[booking.roomId];\r\n                            return (\r\n                                <tr key={booking.id} className={`booking-row ${booking.status}`}>\r\n                                    <td className=\"fw-semibold\">#{booking.id}</td>\r\n                                    <td>\r\n                                        <div>{room?.name || booking.roomId}</div>\r\n                                        {room && <small className=\"text-muted d-block\">{room.location}</small>}\r\n                                    </td>\r\n                                    <td>\r\n                                        <div>{formatDateLocal(booking.startTime)}</div>\r\n                                        <small className=\"text-muted d-block\">\r\n                                            {formatTimeLocal(booking.startTime)} - {formatTimeLocal(booking.endTime)}\r\n                                        </small>\r\n                                    </td>\r\n                                    <td>\r\n                                        <div className=\"purpose-cell\">\r\n                                            {booking.purpose}\r\n                                            {booking.requiredFacilities.length > 0 && (\r\n                                                <small className=\"text-muted d-block\">\r\n                                                    Equipment: {booking.requiredFacilities.map(eqId => \r\n                                                        room?.equipment.find(e => e.id === eqId)?.name\r\n                                                    ).filter(Boolean).join(', ')}\r\n                                                </small>\r\n                                            )}\r\n                                        </div>\r\n                                    </td>\r\n                                    <td className=\"text-center\">\r\n                                        {booking.attendeesCount}\r\n                                        {room && (\r\n                                            <small className=\"text-muted d-block\">\r\n                                                of {room.capacity}\r\n                                            </small>\r\n                                        )}\r\n                                    </td>\r\n                                    <td>\r\n                                        <span className={`status-badge badge ${\r\n                                            booking.status === 'APPROVED' ? 'bg-success' :\r\n                                            booking.status === 'REJECTED' ? 'bg-danger' :\r\n                                            'bg-warning'\r\n                                        }`}>\r\n                                            {booking.status.toUpperCase()}\r\n                                        </span>\r\n                                    </td>\r\n                                    {showAiDecisions && (\r\n                                        <td>\r\n                                            {booking.aiDecision ? (\r\n                                                <div className=\"ai-decision\">\r\n                                                    <span className={`badge ${\r\n                                                        booking.aiDecision.decision === 'APPROVE' ? 'bg-success' : 'bg-danger'\r\n                                                    }`}>\r\n                                                        {booking.aiDecision.decision.toUpperCase()}\r\n                                                    </span>\r\n                                                    <small className=\"d-block mt-1\">\r\n                                                        Confidence: {(booking.aiDecision.confidence * 100).toFixed(1)}%\r\n                                                    </small>\r\n                                                    <button\r\n                                                        className=\"btn btn-link btn-sm p-0 mt-1\"\r\n                                                        onClick={() => {\r\n                                                            // TODO: Show AI rationale in a modal\r\n                                                            alert(booking.aiDecision?.rationale);\r\n                                                        }}\r\n                                                    >\r\n                                                        View Rationale\r\n                                                    </button>\r\n                                                </div>\r\n                                            ) : booking.status === 'PENDING' ? (\r\n                                                <span className=\"text-muted\">Analyzing...</span>\r\n                                            ) : (\r\n                                                <span className=\"text-muted\">N/A</span>\r\n                                            )}\r\n                                        </td>\r\n                                    )}\r\n                                    <td className=\"text-end\">\r\n                                        <button className=\"btn btn-sm btn-outline-secondary me-2\" onClick={async () => {\r\n                                            const newPurpose = prompt('Edit purpose', booking.purpose || '');\r\n                                            if (newPurpose !== null) {\r\n                                                try {\r\n                                                    const api = await import('../api/apiClient');\r\n                                                    await api.updateBooking(booking.id, { purpose: newPurpose });\r\n                                                    await load();\r\n                                                } catch (err) {\r\n                                                    alert('Failed to update booking');\r\n                                                }\r\n                                            }\r\n                                        }}>Edit</button>\r\n                                        <button className=\"btn btn-sm btn-outline-danger\" onClick={async () => {\r\n                                            if (!confirm('Cancel this booking?')) return;\r\n                                            try {\r\n                                                const api = await import('../api/apiClient');\r\n                                                await api.cancelBooking(booking.id, 'user');\r\n                                                await load();\r\n                                            } catch (err) {\r\n                                                alert('Failed to cancel booking');\r\n                                            }\r\n                                        }}>Cancel</button>\r\n                                    </td>\r\n                                </tr>\r\n                            );\r\n                        })}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default BookingsList;\r\n","import React, { createContext, useContext, useReducer, useCallback } from 'react';\r\nimport { Booking, Room, BookingRequest } from '../types';\r\nimport { \r\n    getAllBookings, \r\n    getRooms, \r\n    bookRoom as apiBookRoom,\r\n    updateBookingStatus,\r\n    getAiDecision\r\n} from '../api/apiClient';\r\n\r\n// State types\r\ninterface BookingState {\r\n    bookings: Booking[];\r\n    rooms: Room[];\r\n    loading: boolean;\r\n    error: string | null;\r\n}\r\n\r\n// Action types\r\ntype BookingAction =\r\n    | { type: 'SET_LOADING' }\r\n    | { type: 'SET_ERROR'; payload: string }\r\n    | { type: 'SET_BOOKINGS'; payload: Booking[] }\r\n    | { type: 'SET_ROOMS'; payload: Room[] }\r\n    | { type: 'ADD_BOOKING'; payload: Booking }\r\n    | { type: 'UPDATE_BOOKING'; payload: Booking }\r\n    | { type: 'REMOVE_BOOKING'; payload: number }\r\n    | { type: 'UPDATE_AI_DECISION'; payload: { bookingId: number; aiDecision: Booking['aiDecision'] } };\r\n\r\n// Initial state\r\nconst initialState: BookingState = {\r\n    bookings: [],\r\n    rooms: [],\r\n    loading: false,\r\n    error: null,\r\n};\r\n\r\n// Context type\r\ninterface BookingContextType {\r\n    state: BookingState;\r\n    loadBookings: () => Promise<void>;\r\n    loadRooms: () => Promise<void>;\r\n    createBooking: (bookingData: Omit<Booking, 'id' | 'status'>) => Promise<Booking>;\r\n    handleBookingApproval: (bookingId: number, action: 'APPROVE' | 'REJECT', comments?: string) => Promise<void>;\r\n    refreshAiDecision: (bookingId: number) => Promise<void>;\r\n}\r\n\r\n// Create context\r\nconst BookingContext = createContext<BookingContextType | undefined>(undefined);\r\n\r\n// Reducer\r\nfunction bookingReducer(state: BookingState, action: BookingAction): BookingState {\r\n    switch (action.type) {\r\n        case 'SET_LOADING':\r\n            return { ...state, loading: true, error: null };\r\n        case 'SET_ERROR':\r\n            return { ...state, loading: false, error: action.payload };\r\n        case 'SET_BOOKINGS':\r\n            return { ...state, bookings: action.payload, loading: false };\r\n        case 'SET_ROOMS':\r\n            return { ...state, rooms: action.payload, loading: false };\r\n        case 'ADD_BOOKING':\r\n            return { ...state, bookings: [...state.bookings, action.payload] };\r\n        case 'UPDATE_BOOKING':\r\n            return {\r\n                ...state,\r\n                bookings: state.bookings.map(b =>\r\n                    b.id === action.payload.id ? action.payload : b\r\n                ),\r\n            };\r\n        case 'REMOVE_BOOKING':\r\n            return {\r\n                ...state,\r\n                bookings: state.bookings.filter(b => b.id !== action.payload),\r\n            };\r\n        case 'UPDATE_AI_DECISION':\r\n            return {\r\n                ...state,\r\n                bookings: state.bookings.map(b =>\r\n                    b.id === action.payload.bookingId\r\n                        ? { ...b, aiDecision: action.payload.aiDecision }\r\n                        : b\r\n                ),\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n// Provider component\r\nexport function BookingProvider({ children }: { children: React.ReactNode }) {\r\n    const [state, dispatch] = useReducer(bookingReducer, initialState);\r\n\r\n    const loadBookings = useCallback(async () => {\r\n        dispatch({ type: 'SET_LOADING' });\r\n        try {\r\n            const bookings = await getAllBookings();\r\n            dispatch({ type: 'SET_BOOKINGS', payload: bookings });\r\n\r\n            // Fetch AI decisions for pending bookings\r\n            const pendingStatuses = ['PENDING', 'PENDING_APPROVAL'];\r\n            const pendingBookings = bookings.filter(b => pendingStatuses.includes(String(b.status)));\r\n            await Promise.all(\r\n                pendingBookings.map(async (booking) => {\r\n                    try {\r\n                        const aiDecision = await getAiDecision(booking.id);\r\n                        if (aiDecision) {\r\n                            dispatch({\r\n                                type: 'UPDATE_AI_DECISION',\r\n                                payload: { bookingId: booking.id, aiDecision },\r\n                            });\r\n                        }\r\n                    } catch (err) {\r\n                        console.warn(`Could not fetch AI decision for booking ${booking.id}:`, err);\r\n                    }\r\n                })\r\n            );\r\n        } catch (error) {\r\n            dispatch({ \r\n                type: 'SET_ERROR', \r\n                payload: error instanceof Error ? error.message : 'Failed to load bookings' \r\n            });\r\n        }\r\n    }, []);\r\n\r\n    const loadRooms = useCallback(async () => {\r\n        dispatch({ type: 'SET_LOADING' });\r\n        try {\r\n            const rooms = await getRooms();\r\n            dispatch({ type: 'SET_ROOMS', payload: rooms });\r\n        } catch (error) {\r\n            dispatch({ \r\n                type: 'SET_ERROR', \r\n                payload: error instanceof Error ? error.message : 'Failed to load rooms' \r\n            });\r\n        }\r\n    }, []);\r\n\r\n    const createBooking = useCallback(async (bookingData: Omit<BookingRequest, 'status'>) => {\r\n        try {\r\n            const request: BookingRequest = {\r\n                ...bookingData,\r\n                status: 'PENDING'\r\n            };\r\n            const newBooking = await apiBookRoom(request);\r\n            dispatch({ type: 'ADD_BOOKING', payload: newBooking });\r\n            return newBooking;\r\n        } catch (error) {\r\n            const message = error instanceof Error ? error.message : 'Failed to create booking';\r\n            dispatch({ type: 'SET_ERROR', payload: message });\r\n            throw new Error(message);\r\n        }\r\n    }, []);\r\n\r\n    const handleBookingApproval = useCallback(async (bookingId: number, action: 'APPROVE' | 'REJECT', comments?: string) => {\r\n        try {\r\n            const actionLower = action === 'APPROVE' ? 'approve' : 'reject';\r\n            await updateBookingStatus(bookingId, actionLower, comments);\r\n            dispatch({ type: 'REMOVE_BOOKING', payload: bookingId });\r\n        } catch (error) {\r\n            const message = error instanceof Error ? error.message : `Failed to ${action.toLowerCase()} booking`;\r\n            dispatch({ type: 'SET_ERROR', payload: message });\r\n            throw new Error(message);\r\n        }\r\n    }, []);\r\n\r\n    const refreshAiDecision = useCallback(async (bookingId: number) => {\r\n        try {\r\n            const aiDecision = await getAiDecision(bookingId);\r\n            if (aiDecision) {\r\n                dispatch({\r\n                    type: 'UPDATE_AI_DECISION',\r\n                    payload: { bookingId, aiDecision },\r\n                });\r\n            }\r\n        } catch (error) {\r\n            console.warn(`Could not refresh AI decision for booking ${bookingId}:`, error);\r\n        }\r\n    }, []);\r\n\r\n    const value: BookingContextType = {\r\n        state,\r\n        loadBookings,\r\n        loadRooms,\r\n        createBooking,\r\n        handleBookingApproval,\r\n        refreshAiDecision,\r\n    };\r\n\r\n    return <BookingContext.Provider value={value}>{children}</BookingContext.Provider>;\r\n}\r\n\r\n// Custom hook to use the booking context\r\nexport function useBooking(): BookingContextType {\r\n    const context = useContext(BookingContext);\r\n    if (context === undefined) {\r\n        throw new Error('useBooking must be used within a BookingProvider');\r\n    }\r\n    return context;\r\n}","import React, { useState } from 'react';\nimport { Booking } from '../types';\nimport { formatDateTimeLocal } from '../utils/dateUtils';\nimport { useBooking } from '../stores/bookingStore';\n\ninterface ApprovalQueueProps {\n    onApprovalUpdate?: () => void;\n}\n\nconst ApprovalQueue: React.FC<ApprovalQueueProps> = ({ onApprovalUpdate }) => {\n    const { state: { bookings, rooms, loading, error }, handleBookingApproval } = useBooking();\n    const [processing, setProcessing] = useState<Record<number, boolean>>({});\n\n    const pendingStatuses = ['PENDING', 'PENDING_APPROVAL'];\n    const pendingBookings = bookings.filter(b => pendingStatuses.includes(String(b.status)));\n\n    const handleBookingAction = async (bookingId: number, action: 'APPROVE' | 'REJECT', comments?: string) => {\n        setProcessing(prev => ({ ...prev, [bookingId]: true }));\n        try {\n            await handleBookingApproval(bookingId, action, comments);\n            if (onApprovalUpdate) {\n                onApprovalUpdate();\n            }\n        } catch (err) {\n            console.error(`Failed to ${action} booking:`, err);\n        } finally {\n            setProcessing(prev => ({ ...prev, [bookingId]: false }));\n        }\n    };\n\n    if (loading) {\n        return (\n            <div className=\"text-center p-4\">\n                <div className=\"spinner-border text-primary\" role=\"status\">\n                    <span className=\"visually-hidden\">Loading...</span>\n                </div>\n            </div>\n        );\n    }\n\n    if (error) {\n        return (\n            <div className=\"alert alert-danger\">\n                <i className=\"bi bi-exclamation-triangle me-2\"></i>\n                {error}\n            </div>\n        );\n    }\n\n    if (pendingBookings.length === 0) {\n        return (\n            <div className=\"alert alert-info text-center\">\n                <i className=\"bi bi-check-circle me-2\"></i>\n                No pending approvals at the moment.\n            </div>\n        );\n    }\n\n    return (\n        <div className=\"approval-queue\">\n            {pendingBookings.map((booking) => {\n                const room = rooms.find(r => r.id === booking.roomId);\n                const isProcessing = processing[booking.id] || false;\n                const equipmentList = room?.equipment\n                    .filter(e => booking.requiredFacilities.includes(e.id))\n                    .map(e => e.name)\n                    .join(', ');\n\n                return (\n                    <div key={booking.id} className=\"card mb-3 shadow-sm\">\n                        <div className=\"card-header d-flex justify-content-between align-items-center\">\n                            <h5 className=\"mb-0\">Booking Request #{booking.id}</h5>\n                            <span className=\"badge bg-warning\">Pending</span>\n                        </div>\n                        <div className=\"card-body\">\n                            <div className=\"row\">\n                                <div className=\"col-md-8\">\n                                    <div className=\"mb-3\">\n                                        <h6>Room Details</h6>\n                                        <p className=\"mb-1\">\n                                            <strong>{room?.name || 'Unknown Room'}</strong> \n                                            {room?.location && ` (${room.location})`}\n                                        </p>\n                                        <small className=\"text-muted\">\n                                            Attendees: {booking.attendeesCount} {room && `of ${room.capacity} capacity`}\n                                        </small>\n                                    </div>\n\n                                    <div className=\"mb-3\">\n                                        <h6>Booking Details</h6>\n                                        <p className=\"mb-1\">\n                                            <strong>Time:</strong> {formatDateTimeLocal(booking.startTime)} - {formatDateTimeLocal(booking.endTime)}\n                                        </p>\n                                        <p className=\"mb-1\">\n                                            <strong>Purpose:</strong> {booking.purpose}\n                                        </p>\n                                        {equipmentList && (\n                                            <p className=\"mb-1\">\n                                                <strong>Equipment:</strong> {equipmentList}\n                                            </p>\n                                        )}\n                                    </div>\n\n                                    {booking.aiDecision && (\n                                        <div className={`alert ${\n                                            booking.aiDecision.decision === 'APPROVE' \n                                                ? 'alert-success' \n                                                : 'alert-danger'\n                                        } mb-3`}>\n                                            <h6>AI Recommendation</h6>\n                                            <p className=\"mb-1\">\n                                                <strong>Decision:</strong>{' '}\n                                                {booking.aiDecision.decision.toUpperCase()}\n                                                <span className=\"ms-2\">\n                                                    (Confidence: {booking.aiDecision.confidence.toFixed(1)}%)\n                                                </span>\n                                            </p>\n                                            <p className=\"mb-0\">\n                                                <strong>Rationale:</strong> {booking.aiDecision.rationale}\n                                            </p>\n                                        </div>\n                                    )}\n                                </div>\n\n                                <div className=\"col-md-4\">\n                                    <div className=\"d-grid gap-2\">\n                                        <button\n                                            className=\"btn btn-success\"\n                                            onClick={() => handleBookingAction(booking.id, 'APPROVE')}\n                                            disabled={isProcessing}\n                                        >\n                                            {isProcessing ? (\n                                                <>\n                                                    <span className=\"spinner-border spinner-border-sm me-2\" role=\"status\" aria-hidden=\"true\"></span>\n                                                    Processing...\n                                                </>\n                                            ) : (\n                                                <>\n                                                    <i className=\"bi bi-check-circle me-2\"></i>\n                                                    Approve\n                                                </>\n                                            )}\n                                        </button>\n                                        <button\n                                            className=\"btn btn-danger\"\n                                            onClick={() => handleBookingAction(booking.id, 'REJECT')}\n                                            disabled={isProcessing}\n                                        >\n                                            {isProcessing ? (\n                                                <>\n                                                    <span className=\"spinner-border spinner-border-sm me-2\" role=\"status\" aria-hidden=\"true\"></span>\n                                    Processing...\n                                </>\n                            ) : (\n                                <>\n                                    <i className=\"bi bi-x-circle me-2\"></i>\n                                    Reject\n                                </>\n                            )}\n                        </button>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                );\n            })}\n        </div>\n    );\n};\n\nexport default ApprovalQueue;","import React from 'react';\r\nimport { formatDateTimeLocal, toServerIsoFromLocal, parseServerDateString } from '../utils/dateUtils';\r\n\r\ntype Suggestion = {\r\n  nextSlots?: Array<{ start: string; end: string }>;\r\n  alternateRooms?: Array<any>;\r\n};\r\n\r\ntype Props = {\r\n  show: boolean;\r\n  onClose: () => void;\r\n  suggestions: Suggestion | null;\r\n  onQuickBook: (roomId: number, startIso: string, endIso: string) => void;\r\n};\r\n\r\nconst SuggestionsModal: React.FC<Props> = ({ show, onClose, suggestions, onQuickBook }) => {\r\n  if (!show || !suggestions) return null;\r\n\r\n  return (\r\n    <div className=\"modal d-block\" tabIndex={-1} role=\"dialog\" style={{ background: 'rgba(0,0,0,0.5)' }}>\r\n      <div className=\"modal-dialog modal-lg\" role=\"document\">\r\n        <div className=\"modal-content\">\r\n          <div className=\"modal-header\">\r\n            <h5 className=\"modal-title\">Suggested Alternatives</h5>\r\n            <button type=\"button\" className=\"btn-close\" onClick={onClose}></button>\r\n          </div>\r\n          <div className=\"modal-body\">\r\n            {suggestions.nextSlots && suggestions.nextSlots.length > 0 && (\r\n              <div className=\"mb-3\">\r\n                <h6>Next available time slots for requested room</h6>\r\n                <ul>\r\n                  {suggestions.nextSlots.map((s, idx) => (\r\n                    <li key={idx}>{formatDateTimeLocal(s.start)} - {formatDateTimeLocal(s.end)}</li>\r\n                  ))}\r\n                </ul>\r\n              </div>\r\n            )}\r\n\r\n            {suggestions.alternateRooms && suggestions.alternateRooms.length > 0 && (\r\n              <div>\r\n                <h6>Alternate rooms</h6>\r\n                <div className=\"list-group\">\r\n                  {suggestions.alternateRooms\r\n                    .slice()\r\n                    .sort((a: any, b: any) => {\r\n                      // primary: capacity closeness (abs diff)\r\n                      const capDiffA = Math.abs((a.room.capacity || 0) - (a.requestedCapacity || 0));\r\n                      const capDiffB = Math.abs((b.room.capacity || 0) - (b.requestedCapacity || 0));\r\n                      if (capDiffA !== capDiffB) return capDiffA - capDiffB;\r\n                      // secondary: location match (exact match preferred)\r\n                      const locA = (a.room.location || '').toLowerCase().includes((a.requestedLocation || '').toLowerCase()) ? 0 : 1;\r\n                      const locB = (b.room.location || '').toLowerCase().includes((b.requestedLocation || '').toLowerCase()) ? 0 : 1;\r\n                      if (locA !== locB) return locA - locB;\r\n                      // tertiary: amenities overlap (more overlap preferred)\r\n                      const amenitiesA = new Set((a.room.amenities || []));\r\n                      const amenitiesB = new Set((b.room.amenities || []));\r\n                      const req = new Set((a.requestedAmenities || []));\r\n                      let overlapA = 0;\r\n                      let overlapB = 0;\r\n                      req.forEach((r: any) => { if (amenitiesA.has(r)) overlapA++; if (amenitiesB.has(r)) overlapB++; });\r\n                      return overlapB - overlapA; // more overlap first\r\n                    })\r\n                    .map((alt: any, idx: number) => {\r\n                        const amenities: string[] = alt.room.amenities || [];\r\n                        const requestedAmenities: string[] = alt.requestedAmenities || [];\r\n                        const locationMatches = (String(alt.room.location) || '')\r\n                        .toLowerCase()\r\n                        .includes((String(alt.requestedLocation) || '').toLowerCase());\r\n\r\n                        return(\r\n                    <div key={idx} className=\"list-group-item d-flex justify-content-between align-items-center\">\r\n                      <div style={{minWidth: '0'}}>\r\n                        <strong>{alt.room.name}</strong>\r\n                        <div className=\"text-muted\">Location: {alt.room.location} • Capacity: {alt.room.capacity}</div>\r\n                        <div className=\"mt-1\">\r\n                            {Math.abs((alt.room.capacity || 0) - (alt.requestedCapacity || 0)) === 0 ? (\r\n                                <span className=\"badge bg-success me-1\">Capacity match</span>\r\n                            ) : (\r\n                                <span className=\"badge bg-secondary me-1\">\r\n                                Capacity ±{Math.abs((alt.room.capacity || 0) - (alt.requestedCapacity || 0))}\r\n                                </span>\r\n                            )}\r\n\r\n                            {((String(alt.room.location) || '').toLowerCase().includes((String(alt.requestedLocation) || '').toLowerCase())) ? (\r\n                                <span className=\"badge bg-success me-1\">Location match</span>\r\n                            ) : null}\r\n\r\n                \r\n\r\n                            {(amenities.filter(a => requestedAmenities.includes(a)).length > 0) ? (\r\n                            <span className=\"badge bg-info me-1\">Amenities match</span>\r\n                            ) : null}\r\n                             </div>\r\n                        <div className=\"text-muted mt-2\">Score: {(alt.score || 0).toFixed(2)} • Available from: {alt.availableFrom ? formatDateTimeLocal(alt.availableFrom) : 'N/A'}</div>\r\n                      </div>\r\n                      <div>\r\n                          {alt.availableFrom ? (\r\n                          <button className=\"btn btn-primary\" onClick={() => {\r\n                              const parsed = parseServerDateString(alt.availableFrom);\r\n                              const end = parsed ? toServerIsoFromLocal(new Date(parsed.getTime() + 60*60*1000)) : null;\r\n                              onQuickBook(alt.room.id, alt.availableFrom, end || alt.availableFrom);\r\n                          }}>Quick book</button>\r\n                        ) : (\r\n                          <button className=\"btn btn-outline-secondary\" disabled>Not Available</button>\r\n                        )}\r\n                      </div>\r\n                    </div>\r\n                  );}\r\n                  )}\r\n                </div>\r\n              </div>\r\n            )}\r\n          </div>\r\n          <div className=\"modal-footer\">\r\n            <button type=\"button\" className=\"btn btn-secondary\" onClick={onClose}>Close</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SuggestionsModal;\r\n","import { useState, useEffect } from 'react';\n\nconst useAuth = () => {\n    const [user, setUser] = useState<any>(null);\n    const [loading, setLoading] = useState(true);\n    const [error, setError] = useState<string | null>(null);\n\n    useEffect(() => {\n        const fetchUser = async () => {\n            try {\n                const API_ROOT = process.env.REACT_APP_API_URL || 'http://localhost:8080';\n                const response = await fetch(`${API_ROOT}/api/auth/user`, { credentials: 'include' });\n                if (response.status === 401 || response.status === 204) {\n                    setUser(null);\n                    return;\n                }\n                if (!response.ok) {\n                    throw new Error('Failed to fetch user');\n                }\n                const data = await response.json();\n                setUser(data);\n            } catch (err) {\n                const msg = err instanceof Error ? err.message : String(err);\n                setError(msg);\n            } finally {\n                setLoading(false);\n            }\n        };\n\n        fetchUser();\n    }, []);\n\n    const login = async (credentials: any) => {\n        setLoading(true);\n        try {\n            const API_ROOT = process.env.REACT_APP_API_URL || 'http://localhost:8080';\n            const response = await fetch(`${API_ROOT}/api/auth/login`, {\n                method: 'POST',\n                credentials: 'include',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify(credentials),\n            });\n            if (!response.ok) {\n                const txt = await response.text().catch(() => 'Login failed');\n                throw new Error(txt || 'Login failed');\n            }\n            const data = await response.json();\n            setUser(data);\n            return true;\n        } catch (err) {\n            const msg = err instanceof Error ? err.message : String(err);\n            setError(msg);\n            return false;\n        } finally {\n            setLoading(false);\n        }\n    };\n\n    const logout = async () => {\n        setLoading(true);\n        try {\n            const API_ROOT = process.env.REACT_APP_API_URL || 'http://localhost:8080';\n            await fetch(`${API_ROOT}/api/auth/logout`, { method: 'POST', credentials: 'include' });\n            setUser(null);\n        } catch (err) {\n            const msg = err instanceof Error ? err.message : String(err);\n            setError(msg);\n        } finally {\n            setLoading(false);\n        }\n    };\n\n    return { user, loading, error, login, logout };\n};\n\nexport default useAuth;","import React, { createContext, useContext } from 'react';\r\nimport useAuth from '../hooks/useAuth';\r\n\r\nconst AuthContext = createContext<any>(null);\r\n\r\nconst AuthProvider: React.FC<{ children: React.ReactNode }> = ({ children }) => {\r\n    const auth = useAuth();\r\n    return <AuthContext.Provider value={auth}>{children}</AuthContext.Provider>;\r\n};\r\n\r\nexport const useAuthContext = () => {\r\n    const ctx = useContext(AuthContext);\r\n    if (!ctx) throw new Error('useAuthContext must be used within AuthProvider');\r\n    return ctx;\r\n};\r\n\r\nexport default AuthProvider;\r\n","import React, { useEffect, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport RoomCard from '../components/RoomCard';\nimport BookingsList from '../components/BookingsList';\nimport ApprovalQueue from '../components/ApprovalQueue';\nimport SuggestionsModal from '../components/SuggestionsModal';\nimport { useBooking } from '../stores/bookingStore';\nimport { useAuthContext } from '../stores/authStore';\nimport { Room } from '../types';\nimport * as api from '../api/apiClient';\nimport { toServerIsoFromLocal, parseServerDateString } from '../utils/dateUtils';\n\nconst Dashboard: React.FC = () => {\n    const history = useHistory();\n    const { state, loadRooms, loadBookings } = useBooking();\n    const [activeTab, setActiveTab] = useState<'rooms' | 'bookings' | 'approvals'>('rooms');\n    const { user } = useAuthContext();\n    const isAdmin = (() => {\n        if (!user) return false;\n        const role = user.role || user.roles || user.authorities;\n        try {\n            if (typeof role === 'string') return role.toLowerCase() === 'admin' || role === 'ROLE_ADMIN';\n            if (Array.isArray(role)) {\n                return role.includes('admin') || role.includes('ROLE_ADMIN') || role.includes('ROLE_ADMINISTRATOR');\n            }\n        } catch (e) {\n            return false;\n        }\n        // fallback: check authority-style\n        if (user.authorities) {\n            try {\n                return user.authorities.some((a: any) => String(a?.authority || a).toUpperCase() === 'ROLE_ADMIN');\n            } catch (e) { }\n        }\n        return false;\n    })();\n    const [filterStatus, setFilterStatus] = useState<'all' | 'available' | 'booked'>('all');\n    const [filterDate, setFilterDate] = useState<string>('');\n    const [filterStartTime, setFilterStartTime] = useState<string>('');\n    const [filterLocation, setFilterLocation] = useState<string>('');\n    const [availabilityMap, setAvailabilityMap] = useState<Record<number, boolean>>({});\n    const [suggestions, setSuggestions] = useState<any | null>(null);\n    const [showSuggestionsModal, setShowSuggestionsModal] = useState(false);\n    const [suggestionRoom, setSuggestionRoom] = useState<Room | null>(null);\n\n    useEffect(() => {\n        const init = async () => {\n            await Promise.all([loadRooms(), loadBookings()]);\n        };\n        init();\n    }, [loadRooms, loadBookings]);\n\n    // check query for tab\n    useEffect(() => {\n        const params = new URLSearchParams(window.location.search);\n        const tab = params.get('tab');\n        if (tab === 'bookings') setActiveTab('bookings');\n        if (tab === 'approvals' && isAdmin) setActiveTab('approvals');\n    }, [isAdmin]);\n\n    const filterRooms = (rooms: Room[]) => {\n        let res = rooms;\n        if (filterDate && filterStartTime) {\n            // Use availabilityMap computed from server to determine availability\n            const startIso = `${filterDate}T${filterStartTime}`;\n            // When availabilityMap is empty, fall back to showing all\n            if (Object.keys(availabilityMap).length > 0) {\n                const mapped = res.map(r => ({ ...r, _available: availabilityMap[r.id] }));\n                const mappedFiltered: any[] = mapped.filter(Boolean);\n                res = mappedFiltered;\n            }\n        }\n        if (filterLocation) {\n            res = res.filter(r => r.location && r.location.toLowerCase().includes(filterLocation.toLowerCase()));\n        }\n        switch (filterStatus) {\n            case 'available':\n                return res.filter((room: any) => room._available === true || (room.status && room.status.toLowerCase() === 'available'));\n            case 'booked':\n                return res.filter((room: any) => room._available === false || (room.status && room.status.toLowerCase() === 'booked'));\n            default:\n                return res;\n        }\n    };\n\n    const handleRefresh = async () => {\n        await Promise.all([loadRooms(), loadBookings()]);\n    };\n\n    // When user selects date/time, compute availability map\n    useEffect(() => {\n        const compute = async () => {\n            if (!filterDate || !filterStartTime) return setAvailabilityMap({});\n            const localStart = new Date(`${filterDate}T${filterStartTime}`);\n            const startIso = toServerIsoFromLocal(localStart) || new Date().toISOString();\n            // assume 1 hour duration by default\n            const endIso = toServerIsoFromLocal(new Date(localStart.getTime() + 60 * 60 * 1000)) || new Date().toISOString();\n            const map: Record<number, boolean> = {};\n            await Promise.all(state.rooms.map(async (r) => {\n                try {\n                    const res = await api.checkAvailability(r.id, startIso, endIso);\n                    map[r.id] = !!res.available;\n                } catch (err) {\n                    map[r.id] = true;\n                }\n            }));\n            setAvailabilityMap(map);\n        };\n        compute();\n    }, [filterDate, filterStartTime, state.rooms]);\n\n    if (state.loading) {\n        return (\n            <div className=\"container py-5\">\n                <div className=\"text-center\">\n                    <div className=\"spinner-border text-primary\" role=\"status\">\n                        <span className=\"visually-hidden\">Loading...</span>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n    return (\n        <div className=\"container py-4\">\n            <div className=\"d-flex justify-content-between align-items-center mb-4\">\n                <h1>Smart Meeting Room System</h1>\n                <button \n                    className=\"btn btn-outline-primary\" \n                    onClick={handleRefresh}\n                >\n                    <i className=\"bi bi-arrow-clockwise me-2\"></i>\n                    Refresh\n                </button>\n            </div>\n\n            {state.error && (\n                <div className=\"alert alert-danger mb-4\">\n                    <i className=\"bi bi-exclamation-triangle me-2\"></i>\n                    {state.error}\n                </div>\n            )}\n\n            <ul className=\"nav nav-tabs mb-4\">\n                <li className=\"nav-item\">\n                    <button\n                        className={`nav-link ${activeTab === 'rooms' ? 'active' : ''}`}\n                        onClick={() => setActiveTab('rooms')}\n                    >\n                        <i className=\"bi bi-building me-2\"></i>\n                        Rooms\n                    </button>\n                </li>\n                <li className=\"nav-item\">\n                    <button\n                        className={`nav-link ${activeTab === 'bookings' ? 'active' : ''}`}\n                        onClick={() => setActiveTab('bookings')}\n                    >\n                        <i className=\"bi bi-calendar-event me-2\"></i>\n                        Bookings\n                    </button>\n                </li>\n                {isAdmin && (\n                    <li className=\"nav-item\">\n                        <button\n                            className={`nav-link ${activeTab === 'approvals' ? 'active' : ''}`}\n                            onClick={() => setActiveTab('approvals')}\n                        >\n                            <i className=\"bi bi-check-square me-2\"></i>\n                            Approvals\n                        </button>\n                    </li>\n                )}\n            </ul>\n\n            {activeTab === 'rooms' && (\n                <>\n                    <div className=\"d-flex justify-content-between align-items-center mb-3\">\n                        <div>\n                            <div className=\"d-flex g-2\">\n                                <input className=\"form-control form-control-sm me-2\" type=\"date\" value={filterDate} onChange={e => setFilterDate(e.target.value)} />\n                                <input className=\"form-control form-control-sm me-2\" type=\"time\" value={filterStartTime} onChange={e => setFilterStartTime(e.target.value)} />\n                                <input className=\"form-control form-control-sm\" placeholder=\"Location\" value={filterLocation} onChange={e => setFilterLocation(e.target.value)} />\n                            </div>\n                        </div>\n                        <div className=\"btn-group\">\n                            <button\n                                className={`btn btn-outline-primary ${filterStatus === 'all' ? 'active' : ''}`}\n                                onClick={() => setFilterStatus('all')}\n                            >\n                                All Rooms\n                            </button>\n                            <button\n                                className={`btn btn-outline-primary ${filterStatus === 'available' ? 'active' : ''}`}\n                                onClick={() => setFilterStatus('available')}\n                            >\n                                Available\n                            </button>\n                            <button\n                                className={`btn btn-outline-primary ${filterStatus === 'booked' ? 'active' : ''}`}\n                                onClick={() => setFilterStatus('booked')}\n                            >\n                                Booked\n                            </button>\n                        </div>\n                        <button \n                            className=\"btn btn-primary\" \n                            onClick={() => history.push('/book')}\n                        >\n                            <i className=\"bi bi-plus-circle me-2\"></i>\n                            New Booking\n                        </button>\n                    </div>\n\n                    <div className=\"row row-cols-1 row-cols-md-2 row-cols-lg-3 g-4\">\n                        {filterRooms(state.rooms).map(room => (\n                            <div className=\"col\" key={room.id}>\n                                <div className=\"card h-100\">\n                                    <div className=\"card-body d-flex flex-column\">\n                                        <div className=\"d-flex justify-content-between align-items-start mb-2\">\n                                            <h5 className=\"card-title mb-0\">{room.name}</h5>\n                                            <small className=\"text-muted\">{room.location}</small>\n                                        </div>\n                                        <p className=\"card-text text-muted\">Capacity: {room.capacity}</p>\n                                        <div className=\"mt-auto d-flex justify-content-between align-items-center\">\n                                            <div>\n                                                {filterDate && filterStartTime && Object.keys(availabilityMap).length > 0 ? (\n                                                    availabilityMap[room.id] ? (\n                                                        <span className=\"badge bg-success\">Available</span>\n                                                    ) : (\n                                                        <span className=\"badge bg-danger\">Booked</span>\n                                                    )\n                                                ) : (\n                                                    <span className=\"badge bg-secondary\">Status: {room.status}</span>\n                                                )}\n                                            </div>\n                                            <div>\n                                                <button className=\"btn btn-sm btn-outline-primary me-2\" onClick={() => history.push(`/book/${room.id}`)}>Book</button>\n                                                <button className=\"btn btn-sm btn-outline-secondary\" onClick={async () => {\n                                                    // compute a start/end for suggestion query\n                                                        const localStart = filterDate && filterStartTime ? new Date(`${filterDate}T${filterStartTime}`) : new Date();\n                                                        const startIso = toServerIsoFromLocal(localStart) || new Date().toISOString();\n                                                        const endIso = toServerIsoFromLocal(new Date(localStart.getTime() + 60 * 60 * 1000)) || new Date().toISOString();\n                                                    try {\n                                                        const s = await api.getSuggestions(room.id, startIso, endIso, room.capacity);\n                                                        setSuggestions(s);\n                                                        setSuggestionRoom(room);\n                                                        setShowSuggestionsModal(true);\n                                                    } catch (err) {\n                                                        console.error('Failed to fetch suggestions', err);\n                                                        alert('Could not fetch suggestions.');\n                                                    }\n                                                }}>View suggestions</button>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        ))}\n                    </div>\n\n                    {state.rooms.length === 0 && (\n                        <div className=\"text-center py-5 text-muted\">\n                            <i className=\"bi bi-emoji-neutral display-4\"></i>\n                            <p className=\"mt-3\">No rooms available.</p>\n                        </div>\n                    )}\n                    <SuggestionsModal show={showSuggestionsModal} onClose={() => { setShowSuggestionsModal(false); setSuggestions(null); setSuggestionRoom(null); }} suggestions={suggestions} onQuickBook={async (roomId, startIso, endIso) => {\n                        try {\n                            await api.bookRoom({ roomId, userId: 0, startTime: startIso, endTime: endIso, purpose: 'Quick booking (suggestion)', attendeesCount: suggestionRoom ? Math.min(suggestionRoom.capacity, 1) : 1, requiredFacilities: [], status: 'PENDING', priority: 3, notes: '' });\n                            setShowSuggestionsModal(false);\n                            setSuggestions(null);\n                            setSuggestionRoom(null);\n                            await loadRooms();\n                            await loadBookings();\n                        } catch (err) {\n                            console.error('Quick book failed', err);\n                            alert('Quick book failed');\n                        }\n                    }} />\n                </>\n            )}\n\n            {activeTab === 'bookings' && (\n                <BookingsList showAiDecisions={true} />\n            )}\n\n            {activeTab === 'approvals' && (\n                isAdmin ? (\n                    <ApprovalQueue onApprovalUpdate={handleRefresh} />\n                ) : (\n                    <div className=\"alert alert-warning\">\n                        You are not authorized to view approvals.\n                    </div>\n                )\n            )}\n        </div>\n    );\n};\n\nexport default Dashboard;","import React, { useState } from 'react';\r\n\r\ntype Props = {\r\n    show: boolean;\r\n    initialPurpose: string;\r\n    rationale?: string[];\r\n    onClose: () => void;\r\n    onConfirm: (newPurpose: string) => void;\r\n}\r\n\r\nconst PurposeClarifyModal: React.FC<Props> = ({ show, initialPurpose, rationale, onClose, onConfirm }) => {\r\n    const [purpose, setPurpose] = useState(initialPurpose || '');\r\n\r\n    // Keep local state in sync when modal reopens with different initialPurpose\r\n    React.useEffect(() => { setPurpose(initialPurpose || ''); }, [initialPurpose, show]);\r\n\r\n    if (!show) return null;\r\n\r\n    return (\r\n        <div className=\"modal-backdrop\">\r\n            <div className=\"modal-dialog modal-lg\">\r\n                <div className=\"modal-content\">\r\n                    <div className=\"modal-header\">\r\n                        <h5 className=\"modal-title\">Clarify Meeting Purpose</h5>\r\n                        <button type=\"button\" className=\"btn-close\" aria-label=\"Close\" onClick={onClose}></button>\r\n                    </div>\r\n                    <div className=\"modal-body\">\r\n                        <p>The booking purpose was flagged as unclear. Please clarify so the system can validate it.</p>\r\n                        {rationale && rationale.length > 0 && (\r\n                            <div className=\"alert alert-warning\">\r\n                                <strong>Reason(s):</strong>\r\n                                <ul>\r\n                                    {rationale.map((r, i) => <li key={i}>{r}</li>)}\r\n                                </ul>\r\n                            </div>\r\n                        )}\r\n                        <div className=\"mb-3\">\r\n                            <label className=\"form-label\">Purpose</label>\r\n                            <textarea className=\"form-control\" rows={4} value={purpose} onChange={e => setPurpose(e.target.value)} />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"modal-footer\">\r\n                        <button className=\"btn btn-secondary\" onClick={onClose}>Cancel</button>\r\n                        <button className=\"btn btn-primary\" onClick={() => onConfirm(purpose)}>Re-validate</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PurposeClarifyModal;\r\n","import React, { useEffect, useState } from 'react';\nimport { bookRoom } from '../api/apiClient';\nimport { Room, Equipment, BookingRequest } from '../types';\nimport SuggestionsModal from './SuggestionsModal';\nimport PurposeClarifyModal from './PurposeClarifyModal';\nimport { toServerIsoFromLocal } from '../utils/dateUtils';\nimport { useBooking } from '../stores/bookingStore';\nimport { useHistory } from 'react-router-dom';\nimport '../styles/BookingForm.css';\n\ntype BookingFormProps = {\n    onCreated?: () => void;\n    initialRoomId?: number;\n};\n\nconst BookingForm: React.FC<BookingFormProps> = ({ onCreated, initialRoomId }) => {\n    const [selectedRoomId, setSelectedRoomId] = useState<number | undefined>(initialRoomId);\n    const [date, setDate] = useState(new Date().toISOString().split('T')[0]);\n    const [startTime, setStartTime] = useState('09:00');\n    const [endTime, setEndTime] = useState('10:00');\n    const [purpose, setPurpose] = useState('');\n    const [attendees, setAttendees] = useState<number>(1);\n    const [selectedEquipment, setSelectedEquipment] = useState<string[]>([]);\n    const [isSubmitting, setIsSubmitting] = useState(false);\n    const [message, setMessage] = useState<{ type: 'success' | 'error' | 'info'; text: string } | null>(null);\n    const [suggestions, setSuggestions] = useState<any | null>(null);\n    const [showSuggestionsModal, setShowSuggestionsModal] = useState(false);\n    const [showPurposeModal, setShowPurposeModal] = useState(false);\n    const [purposeRationale, setPurposeRationale] = useState<string[] | undefined>(undefined);\n    const { state: { rooms }, loadRooms } = useBooking();\n    const history = useHistory();\n\n    useEffect(() => {\n        if (rooms.length === 0) {\n            loadRooms();\n        } else if (!selectedRoomId && rooms.length > 0) {\n            setSelectedRoomId(rooms[0].id);\n        }\n    }, [rooms, loadRooms, selectedRoomId]);\n\n    const validateForm = (): string | null => {\n        if (!selectedRoomId) {\n            return 'Please select a room';\n        }\n\n        const selectedRoom = rooms.find(r => r.id === selectedRoomId);\n        if (!selectedRoom) {\n            return 'Invalid room selected';\n        }\n\n    const start = new Date(`${date}T${startTime}`);\n    const end = new Date(`${date}T${endTime}`);\n\n        if (end <= start) {\n            return 'End time must be after start time';\n        }\n\n        if (start < new Date()) {\n            return 'Cannot book a room in the past';\n        }\n\n        if (attendees > selectedRoom.capacity) {\n            return `Room capacity (${selectedRoom.capacity}) exceeded`;\n        }\n\n        if (purpose.length < 10) {\n            return 'Please provide a more detailed purpose (minimum 10 characters)';\n        }\n\n        return null;\n    };\n\n    const handleSubmit = async (e: React.FormEvent) => {\n        e.preventDefault();\n        setMessage(null);\n        setIsSubmitting(true);\n\n        const validationError = validateForm();\n        if (validationError) {\n            setMessage({ type: 'error', text: validationError });\n            setIsSubmitting(false);\n            return;\n        }\n\n        if (!selectedRoomId) {\n            setMessage({ type: 'error', text: 'Please select a room' });\n            setIsSubmitting(false);\n            return;\n        }\n\n        try {\n            const start = new Date(`${date}T${startTime}`);\n            const end = new Date(`${date}T${endTime}`);\n\n            const bookingRequest: BookingRequest = {\n                roomId: selectedRoomId,\n                startTime: toServerIsoFromLocal(start)?? '',\n                endTime: toServerIsoFromLocal(end)??'',\n                purpose,\n                attendeesCount: attendees,\n                notes: '',\n                requiredFacilities: selectedEquipment,\n                status: 'PENDING',\n                priority: 3 // Default priority\n            };\n\n            // Validate purpose/booking using AI/rules before persisting\n            const api = await import('../api/apiClient');\n            try {\n                const val = await api.validateBooking(bookingRequest);\n                if (val && val.valid === false) {\n                    // store rationale and show purpose clarification modal so the user can edit without losing form state\n                    setPurposeRationale(val.rationale || []);\n                    setShowPurposeModal(true);\n                    setIsSubmitting(false);\n                    return;\n                }\n            } catch (e) {\n                // validation failed due to API error: continue to availability check but log\n                console.warn('Validation call failed, continuing to availability check', e);\n            }\n\n            // Check availability first\n            const avail = await api.checkAvailability(selectedRoomId, bookingRequest.startTime, bookingRequest.endTime);\n            if (!avail.available) {\n                // get suggestions\n                const s = await api.getSuggestions(selectedRoomId, bookingRequest.startTime, bookingRequest.endTime, attendees);\n                setSuggestions(s);\n                setShowSuggestionsModal(true);\n                setMessage({ type: 'error', text: 'Selected room is not available at requested time. Suggestions provided below.' });\n                setIsSubmitting(false);\n                return;\n            }\n\n            const created = await bookRoom(bookingRequest);\n            setMessage({ \n                type: 'success', \n                text: `Booking created successfully! Status: ${created.status}${created.aiDecision ? ' | AI Status: ' + created.aiDecision.decision : ''}` \n            });\n            \n            // Reset form\n            setPurpose('');\n            setAttendees(1);\n            setSelectedEquipment([]);\n            setDate(new Date().toISOString().split('T')[0]);\n            setStartTime('09:00');\n            setEndTime('10:00');\n            \n            if (onCreated) onCreated();\n            // Redirect user to their bookings list so they can see status immediately\n            history.push('/?tab=bookings');\n        } catch (err) {\n            console.error('booking failed', err);\n            setMessage({ \n                type: 'error', \n                text: err instanceof Error ? err.message : 'Failed to create booking' \n            });\n        } finally {\n            setIsSubmitting(false);\n        }\n    };\n\n    // Called by PurposeClarifyModal: update purpose and re-run submit flow (validation then availability/create)\n    const handlePurposeConfirm = async (newPurpose: string) => {\n        setShowPurposeModal(false);\n        setPurpose(newPurpose);\n        // Re-run submit sequence programmatically\n        // We call the same logic as handleSubmit but without event\n        setMessage(null);\n        setIsSubmitting(true);\n        try {\n            const start = new Date(`${date}T${startTime}`);\n            const end = new Date(`${date}T${endTime}`);\n            const bookingRequest: BookingRequest = {\n                roomId: selectedRoomId??0,\n                userId: 0,\n                startTime: toServerIsoFromLocal(start) || '',\n                endTime: toServerIsoFromLocal(end) || '',\n                purpose: newPurpose,\n                attendeesCount: attendees,\n                notes: '',\n                requiredFacilities: selectedEquipment,\n                status: 'PENDING',\n                priority: 3\n            };\n            const api = await import('../api/apiClient');\n            const val = await api.validateBooking(bookingRequest);\n            if (val && val.valid === false) {\n                // still invalid — show message and keep modal closed so user can edit again\n                setMessage({ type: 'error', text: 'Purpose still flagged as invalid: ' + (val.rationale ? val.rationale.join('; ') : '') });\n                setPurposeRationale(val.rationale || []);\n                setShowPurposeModal(true);\n                setIsSubmitting(false);\n                return;\n            }\n            // availability\n            const avail = await api.checkAvailability(selectedRoomId??0, bookingRequest.startTime, bookingRequest.endTime);\n            if (!avail.available) {\n                const s = await api.getSuggestions(selectedRoomId??0, bookingRequest.startTime, bookingRequest.endTime, attendees);\n                setSuggestions(s);\n                setShowSuggestionsModal(true);\n                setMessage({ type: 'error', text: 'Selected room is not available at requested time. Suggestions provided below.' });\n                setIsSubmitting(false);\n                return;\n            }\n            const created = await bookRoom(bookingRequest);\n            setMessage({ type: 'success', text: `Booking created successfully! Status: ${created.status}` });\n            if (onCreated) onCreated();\n            history.push('/?tab=bookings');\n        } catch (err) {\n            console.error('booking failed', err);\n            setMessage({ type: 'error', text: err instanceof Error ? err.message : 'Failed to create booking' });\n        } finally {\n            setIsSubmitting(false);\n        }\n    };\n\n    const selectedRoom = rooms.find(r => r.id === selectedRoomId);\n\n    const handleQuickBook = async (roomId: number, startIso: string, endIso: string) => {\n        setIsSubmitting(true);\n        try {\n            const quickReq: BookingRequest = {\n                roomId,\n                startTime: startIso,\n                endTime: endIso,\n                purpose,\n                attendeesCount: attendees,\n                requiredFacilities: selectedEquipment,\n                status: 'PENDING',\n                priority: 3,\n                notes: ''\n            };\n            await bookRoom(quickReq);\n            setShowSuggestionsModal(false);\n            setSuggestions(null);\n            if (onCreated) onCreated();\n            history.push('/?tab=bookings');\n        } catch (err) {\n            console.error('Quick book failed', err);\n        } finally {\n            setIsSubmitting(false);\n        }\n    };\n\n    return (\n        <form onSubmit={handleSubmit} className=\"booking-form\">\n            <div className=\"mb-4\">\n                <label className=\"form-label fw-semibold\">Room:</label>\n                <select \n                    className=\"form-select form-select-lg shadow-sm\" \n                    value={selectedRoomId || ''} \n                    onChange={(e) => setSelectedRoomId(Number(e.target.value))} \n                    required\n                    disabled={isSubmitting}\n                >\n                    <option value=\"\">Select a room</option>\n                    {rooms.map(r => (\n                        <option key={r.id} value={r.id}>\n                            {r.name} ({r.location}) - Capacity: {r.capacity}\n                        </option>\n                    ))}\n                </select>\n                {selectedRoom && (\n                    <div className=\"text-muted mt-2\">\n                        <small>\n                            Available equipment: {selectedRoom.equipment.map(e => e.name).join(', ')}\n                        </small>\n                    </div>\n                )}\n            </div>\n\n            <div className=\"mb-4\">\n                <label className=\"form-label fw-semibold\">Meeting Purpose:</label>\n                <textarea\n                    className=\"form-control form-control-lg shadow-sm\"\n                    value={purpose}\n                    onChange={(e) => setPurpose(e.target.value)}\n                    required\n                    disabled={isSubmitting}\n                    placeholder=\"Describe the purpose of your meeting...\"\n                    rows={3}\n                    minLength={10}\n                />\n                <small className=\"text-muted\">\n                    Minimum 10 characters required\n                </small>\n            </div>\n\n            <div className=\"mb-4\">\n                <label className=\"form-label fw-semibold\">Number of Attendees:</label>\n                <input\n                    type=\"number\"\n                    className=\"form-control form-control-lg shadow-sm\"\n                    value={attendees}\n                    onChange={(e) => setAttendees(Math.max(1, Number(e.target.value)))}\n                    min=\"1\"\n                    max={selectedRoom?.capacity || 999}\n                    required\n                    disabled={isSubmitting}\n                />\n                {selectedRoom && (\n                    <small className=\"text-muted\">\n                        Room capacity: {selectedRoom.capacity} people\n                    </small>\n                )}\n            </div>\n\n            <div className=\"row mb-4\">\n                <div className=\"col-md-4\">\n                    <label className=\"form-label fw-semibold\">Date:</label>\n                    <input \n                        type=\"date\" \n                        className=\"form-control form-control-lg shadow-sm\" \n                        value={date} \n                        onChange={(e) => setDate(e.target.value)} \n                        required \n                        disabled={isSubmitting}\n                        min={new Date().toISOString().split('T')[0]}\n                    />\n                </div>\n                <div className=\"col-md-4\">\n                    <label className=\"form-label fw-semibold\">Start Time:</label>\n                    <input \n                        type=\"time\" \n                        className=\"form-control form-control-lg shadow-sm\" \n                        value={startTime} \n                        onChange={(e) => setStartTime(e.target.value)} \n                        required \n                        disabled={isSubmitting}\n                    />\n                </div>\n                <div className=\"col-md-4\">\n                    <label className=\"form-label fw-semibold\">End Time:</label>\n                    <input \n                        type=\"time\"\n                        className=\"form-control form-control-lg shadow-sm\" \n                        value={endTime} \n                        onChange={(e) => setEndTime(e.target.value)} \n                        required \n                        disabled={isSubmitting}\n                    />\n                </div>\n            </div>\n\n            {selectedRoom?.equipment && selectedRoom.equipment.length > 0 && (\n                <div className=\"mb-4\">\n                    <label className=\"form-label fw-semibold\">Required Equipment:</label>\n                    <div className=\"row g-3\">\n                        {selectedRoom.equipment.map(item => (\n                            <div key={item.id} className=\"col-md-6 col-lg-4\">\n                                <div className=\"form-check\">\n                                    <input\n                                        type=\"checkbox\"\n                                        className=\"form-check-input\"\n                                        id={`equipment-${item.id}`}\n                                        checked={selectedEquipment.includes(item.id)}\n                                        onChange={(e) => {\n                                            if (e.target.checked) {\n                                                setSelectedEquipment([...selectedEquipment, item.id]);\n                                            } else {\n                                                setSelectedEquipment(selectedEquipment.filter(id => id !== item.id));\n                                            }\n                                        }}\n                                        disabled={isSubmitting || (item.status && item.status.toLowerCase() !== 'available')}\n                                    />\n                                    <label className=\"form-check-label\" htmlFor={`equipment-${item.id}`}>\n                                        {item.name}\n                                        <span className={`ms-2 badge ${\n                                            item.status === 'available' ? 'bg-success' :\n                                            item.status === 'in-use' ? 'bg-warning' :\n                                            'bg-danger'\n                                        }`}>\n                                            {item.status}\n                                        </span>\n                                    </label>\n                                </div>\n                            </div>\n                        ))}\n                    </div>\n                </div>\n            )}\n            <SuggestionsModal show={showSuggestionsModal} onClose={() => { setShowSuggestionsModal(false); setSuggestions(null); }} suggestions={suggestions} onQuickBook={handleQuickBook} />\n            <PurposeClarifyModal show={showPurposeModal} initialPurpose={purpose} rationale={purposeRationale} onClose={() => setShowPurposeModal(false)} onConfirm={handlePurposeConfirm} />\n\n            <div className=\"d-grid gap-2\">\n                <button \n                    type=\"submit\" \n                    className=\"btn btn-primary btn-lg shadow transition-all hover-scale\"\n                    disabled={isSubmitting}\n                >\n                    {isSubmitting ? (\n                        <>\n                            <span className=\"spinner-border spinner-border-sm me-2\" role=\"status\" aria-hidden=\"true\"></span>\n                            Submitting...\n                        </>\n                    ) : (\n                        'Book Room'\n                    )}\n                </button>\n            </div>\n\n            {message && (\n                <div className={`alert alert-${message.type === 'error' ? 'danger' : 'success'} mt-4`}>\n                    {message.text}\n                </div>\n            )}\n        </form>\n    );\n};\n\nexport default BookingForm;","import React, { useEffect } from 'react';\nimport { useParams, useHistory } from 'react-router-dom';\nimport BookingForm from '../components/BookingForm';\nimport { useBooking } from '../stores/bookingStore';\nimport Navigation from '../components/Navigation';\n\nconst BookingPage: React.FC = () => {\n    const { roomId } = useParams<{ roomId?: string }>();\n    const { state, loadRooms, loadBookings } = useBooking();\n    const history = useHistory();\n\n    useEffect(() => {\n        if (!state.rooms.length || !state.bookings.length) {\n            const init = async () => {\n                await Promise.all([loadRooms(), loadBookings()]);\n            };\n            init();\n        }\n    }, [state.rooms.length, state.bookings.length, loadRooms, loadBookings]);\n\n    if (state.loading) {\n        return (\n            <div className=\"container py-5\">\n                <div className=\"text-center\">\n                    <div className=\"spinner-border text-primary\" role=\"status\">\n                        <span className=\"visually-hidden\">Loading...</span>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n    return (\n        <div className=\"container py-4\">\n            <div className=\"d-flex justify-content-between align-items-center mb-4\">\n                <h1>Book a Meeting Room</h1>\n                <button \n                    className=\"btn btn-outline-primary\" \n                    onClick={() => history.push('/')}\n                >\n                    <i className=\"bi bi-arrow-left me-2\"></i>\n                    Back to Dashboard\n                </button>\n            </div>\n\n            {state.error && (\n                <div className=\"alert alert-danger\">\n                    <i className=\"bi bi-exclamation-triangle me-2\"></i>\n                    {state.error}\n                </div>\n            )}\n\n            <div className=\"row justify-content-center\">\n                <div className=\"col-md-8\">\n                    <div className=\"card shadow-sm\">\n                        <div className=\"card-body\">\n                            <BookingForm \n                                onCreated={() => { history.push('/?tab=bookings'); }} \n                                initialRoomId={roomId ? Number(roomId) : undefined}\n                            />\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default BookingPage;","import React from 'react';\r\nimport { useLocation, Link } from 'react-router-dom';\r\nimport { useAuthContext } from '../stores/authStore';\r\n\r\nconst Navigation: React.FC = () => {\r\n    const location = useLocation();\r\n    \r\n    const { user, logout } = useAuthContext();\r\n\r\n    return (\r\n        <div className=\"container-fluid bg-light mb-4\">\r\n            <div className=\"container\">\r\n                <ul className=\"nav nav-tabs justify-content-center\">\r\n                    <li className=\"nav-item\">\r\n                        <Link \r\n                            to=\"/\" \r\n                            className={`nav-link ${location.pathname === '/' ? 'active' : ''}`}\r\n                        >\r\n                            Dashboard\r\n                        </Link>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <Link \r\n                            to=\"/book\" \r\n                            className={`nav-link ${location.pathname.startsWith('/book') ? 'active' : ''}`}\r\n                        >\r\n                            Book Room\r\n                        </Link>\r\n                    </li>\r\n                    {user ? (\r\n                        <li className=\"nav-item ms-auto d-flex align-items-center\">\r\n                            <span className=\"me-3\">{user.username}</span>\r\n                            <button className=\"btn btn-sm btn-outline-secondary\" onClick={() => logout()}>Logout</button>\r\n                        </li>\r\n                    ) : (\r\n                        <li className=\"nav-item ms-auto\">\r\n                            <Link to=\"/login\" className={`nav-link ${location.pathname === '/login' ? 'active' : ''}`}>Login</Link>\r\n                        </li>\r\n                    )}\r\n                    {user && (user.role === 'ROLE_ADMIN' || user.role === 'ADMIN') && (\r\n                        <li className=\"nav-item\">\r\n                            <Link \r\n                                to=\"/admin\" \r\n                                className={`nav-link ${location.pathname === '/admin' ? 'active' : ''}`}\r\n                            >\r\n                                Admin Panel\r\n                            </Link>\r\n                        </li>\r\n                    )}\r\n                </ul>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Navigation;","import React, { useEffect, useState } from 'react';\r\nimport * as api from '../api/apiClient';\r\nimport { BarChart, Bar, XAxis, YAxis, Tooltip, ResponsiveContainer, Cell } from 'recharts';\r\n\r\nconst AdminAnalytics: React.FC = () => {\r\n    const [data, setData] = useState<any | null>(null);\r\n    const [loading, setLoading] = useState(true);\r\n\r\n    useEffect(() => {\r\n        const load = async () => {\r\n            setLoading(true);\r\n            try {\r\n                const res = await api.getAdminAnalyticsOverview();\r\n                setData(res);\r\n            } catch (err) {\r\n                console.error('Failed to load analytics', err);\r\n            } finally { setLoading(false); }\r\n        };\r\n        load();\r\n    }, []);\r\n\r\n    if (loading) return <div>Loading analytics...</div>;\r\n    if (!data) return <div>No analytics available.</div>;\r\n\r\n    const topRooms = (data.topRooms || []).map((r: any) => ({ name: r.name, value: (r.count || 0) }));\r\n    const util = (data.utilization || []).map((r: any) => ({ name: r.name, value: Math.round((r.utilization || 0) * 10000) / 100.0 }));\r\n\r\n    const colors = ['#0d6efd', '#6c757d', '#198754', '#dc3545', '#fd7e14'];\r\n\r\n    return (\r\n        <div className=\"container py-4\">\r\n            <h2 className=\"mb-4\">Admin Analytics</h2>\r\n\r\n            <div className=\"row g-4\">\r\n                <div className=\"col-12 col-lg-6\">\r\n                    <div className=\"card shadow-sm\">\r\n                        <div className=\"card-body\">\r\n                            <h5 className=\"card-title\">Top Booked Rooms</h5>\r\n                            <p className=\"text-muted small\">Booking counts over all time</p>\r\n                            <div style={{ width: '100%', height: 260 }}>\r\n                                <ResponsiveContainer>\r\n                                    <BarChart data={topRooms} layout=\"vertical\">\r\n                                        <XAxis type=\"number\" />\r\n                                        <YAxis dataKey=\"name\" type=\"category\" width={150} />\r\n                                        <Tooltip />\r\n                                        <Bar dataKey=\"value\" fill=\"#0d6efd\">\r\n                                            {topRooms.map((entry: any, index: number) => (\r\n                                                <Cell key={`cell-${index}`} fill={colors[index % colors.length]} />\r\n                                            ))}\r\n                                        </Bar>\r\n                                    </BarChart>\r\n                                </ResponsiveContainer>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"col-12 col-lg-6\">\r\n                    <div className=\"card shadow-sm\">\r\n                        <div className=\"card-body\">\r\n                            <h5 className=\"card-title\">Room Utilization (last 30 days)</h5>\r\n                            <p className=\"text-muted small\">Estimated percent of working hours booked</p>\r\n                            <div style={{ width: '100%', height: 260 }}>\r\n                                <ResponsiveContainer>\r\n                                    <BarChart data={util} layout=\"vertical\">\r\n                                        <XAxis type=\"number\" domain={[0, 100]} unit=\"%\" />\r\n                                        <YAxis dataKey=\"name\" type=\"category\" width={150} />\r\n                                        <Tooltip formatter={(v:number) => v + '%'} />\r\n                                        <Bar dataKey=\"value\">\r\n                                            {util.map((entry: any, index: number) => (\r\n                                                <Cell key={`cellu-${index}`} fill={colors[index % colors.length]} />\r\n                                            ))}\r\n                                        </Bar>\r\n                                    </BarChart>\r\n                                </ResponsiveContainer>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"row mt-4\">\r\n                <div className=\"col-12\">\r\n                    <div className=\"card shadow-sm\">\r\n                        <div className=\"card-body\">\r\n                            <h5 className=\"card-title\">Recommendations</h5>\r\n                            <p className=\"text-muted small\">AI-driven suggestions for resource planning</p>\r\n                            <ul className=\"list-group list-group-flush\">\r\n                                {(data.recommendations || []).map((r: any, i: number) => (\r\n                                    <li key={i} className=\"list-group-item\">\r\n                                        <strong>{r.name}</strong>\r\n                                        <div className=\"text-muted small\">{r.reason}</div>\r\n                                    </li>\r\n                                ))}\r\n                            </ul>\r\n                            <div className=\"mt-3\">\r\n                                <h6>AI Insights</h6>\r\n                                {data.aiInsightsError && <div className=\"text-danger small\">AI insights error: {data.aiInsightsError}</div>}\r\n                                {data.aiInsights && (\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-md-6\">\r\n                                            <div className=\"card mb-2\">\r\n                                                <div className=\"card-body\">\r\n                                                    <h6 className=\"card-title\">Insights</h6>\r\n                                                    <ul className=\"list-group list-group-flush\">\r\n                                                        {(data.aiInsights.insights || []).map((s: string, i: number) => (\r\n                                                            <li key={i} className=\"list-group-item small\">{s}</li>\r\n                                                        ))}\r\n                                                    </ul>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"col-md-6\">\r\n                                            <div className=\"card mb-2\">\r\n                                                <div className=\"card-body\">\r\n                                                    <h6 className=\"card-title\">AI Recommendations</h6>\r\n                                                    <ul className=\"list-group list-group-flush\">\r\n                                                        {(data.aiInsights.recommendations || []).map((r: string, i: number) => (\r\n                                                            <li key={i} className=\"list-group-item small\">{r}</li>\r\n                                                        ))}\r\n                                                    </ul>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                )}\r\n                                {!data.aiInsights && data.aiInsightsRaw && <pre className=\"small bg-light p-2\" style={{whiteSpace: 'pre-wrap'}}>{data.aiInsightsRaw}</pre>}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AdminAnalytics;\r\n","import React, { useState } from 'react';\nimport Navigation from '../components/Navigation';\nimport ApprovalQueue from '../components/ApprovalQueue';\nimport BookingsList from '../components/BookingsList';\nimport AdminAnalytics from './AdminAnalytics';\n\nconst AdminPanel: React.FC = () => {\n    const [activeTab, setActiveTab] = useState<'approvals' | 'bookings' | 'analytics'>('approvals');\n\n    return (\n        <>\n            <Navigation />\n            <div className=\"container py-4\">\n                <h1 className=\"text-center mb-4\">Admin Panel</h1>\n                \n                <ul className=\"nav nav-pills mb-4 justify-content-center\">\n                    <li className=\"nav-item\">\n                        <button \n                            className={`nav-link ${activeTab === 'approvals' ? 'active' : ''}`}\n                            onClick={() => setActiveTab('approvals')}\n                        >\n                            Pending Approvals\n                        </button>\n                    </li>\n                    <li className=\"nav-item\">\n                        <button \n                            className={`nav-link ${activeTab === 'bookings' ? 'active' : ''}`}\n                            onClick={() => setActiveTab('bookings')}\n                        >\n                            All Bookings\n                        </button>\n                    </li>\n                    <li className=\"nav-item\">\n                        <button \n                            className={`nav-link ${activeTab === 'analytics' ? 'active' : ''}`}\n                            onClick={() => setActiveTab('analytics')}\n                        >\n                            Analytics\n                        </button>\n                    </li>\n                </ul>\n\n                {activeTab === 'approvals' ? (\n                    <div>\n                        <h2 className=\"text-center mb-4\">Pending Approvals</h2>\n                        <ApprovalQueue />\n                    </div>\n                ) : activeTab === 'bookings' ? (\n                    <div>\n                        <h2 className=\"text-center mb-4\">All Bookings</h2>\n                        <BookingsList />\n                    </div>\n                ) : (\n                    <div>\n                        <h2 className=\"text-center mb-4\">Analytics</h2>\n                        <AdminAnalytics />\n                    </div>\n                )}\n            </div>\n        </>\n    );\n};\n\nexport default AdminPanel;","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { useAuthContext } from '../stores/authStore';\r\n\r\ninterface PrivateRouteProps {\r\n  component: React.ComponentType<any>;\r\n  path: string;\r\n  exact?: boolean;\r\n  requiredRole?: string; // e.g. 'ROLE_ADMIN'\r\n}\r\n\r\nconst PrivateRoute: React.FC<PrivateRouteProps> = ({ component: Component, requiredRole, ...rest }) => {\r\n  const { user, loading } = useAuthContext();\r\n  if (loading) return <div>Loading...</div>;\r\n  const hasRole = !requiredRole || (user && user.role === requiredRole);\r\n  return (\r\n    <Route {...rest} render={(props) => (\r\n      user && hasRole ? <Component {...props} /> : <Redirect to={{ pathname: '/login' }} />\r\n    )} />\r\n  );\r\n};\r\n\r\nexport default PrivateRoute;\r\n","import React, { useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useAuthContext } from '../stores/authStore';\r\n\r\nconst Login: React.FC = () => {\r\n    const [username, setUsername] = useState('alice');\r\n    const { login, user, loading, error } = useAuthContext();\r\n    const history = useHistory();\r\n\r\n    const [password, setPassword] = useState('alicepass');\r\n\r\n    const handleSubmit = async (e: React.FormEvent) => {\r\n        e.preventDefault();\r\n        const ok = await login({ username, password });\r\n        if (ok) history.push('/');\r\n    };\r\n\r\n    if (loading) return <div>Loading...</div>;\r\n\r\n    return (\r\n        <div className=\"container py-5\">\r\n            <div className=\"row justify-content-center\">\r\n                <div className=\"col-md-6\">\r\n                    <div className=\"card shadow-sm\">\r\n                        <div className=\"card-body\">\r\n                            <h3 className=\"mb-3\">Login</h3>\r\n                            {error && <div className=\"alert alert-danger\">{error}</div>}\r\n                            <form onSubmit={handleSubmit}>\r\n                                <div className=\"mb-3\">\r\n                                    <label className=\"form-label\">Username</label>\r\n                                    <input className=\"form-control\" value={username} onChange={e => setUsername(e.target.value)} />\r\n                                </div>\r\n                                    <div className=\"mb-3\">\r\n                                        <label className=\"form-label\">Password</label>\r\n                                        <input type=\"password\" className=\"form-control\" value={password} onChange={e => setPassword(e.target.value)} />\r\n                                    </div>\r\n                                <button className=\"btn btn-primary\" type=\"submit\">Login</button>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Login;\r\n","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport Dashboard from './pages/Dashboard';\nimport BookingPage from './pages/BookingPage';\nimport AdminPanel from './pages/AdminPanel';\nimport PrivateRoute from './components/PrivateRoute';\nimport Login from './pages/Login';\nimport Navigation from './components/Navigation';\nimport { BookingProvider } from './stores/bookingStore';\nimport AuthProvider from './stores/authStore';\nimport './styles/globals.css';\nimport { useAuthContext } from './stores/authStore';\nimport { Redirect, useLocation } from 'react-router-dom';\n\nconst App: React.FC = () => {\n  return (\n    <BookingProvider>\n      <AuthProvider>\n        <Router>\n          <div className=\"app\">\n            <Navigation />\n            <main className=\"main-content\">\n              <Switch>\n                <Route path=\"/login\" component={Login} />\n                <Route path=\"/\">\n                  <AuthGate>\n                    <Switch>\n                      <Route exact path=\"/\" component={Dashboard} />\n                      <Route path=\"/book/:roomId\" component={BookingPage} />\n                      <Route exact path=\"/book\" component={BookingPage} />\n                      <PrivateRoute path=\"/admin\" component={AdminPanel} requiredRole={'ROLE_ADMIN'} />\n                    </Switch>\n                  </AuthGate>\n                </Route>\n              </Switch>\n            </main>\n          </div>\n        </Router>\n      </AuthProvider>\n    </BookingProvider>\n  );\n};\n\nconst AuthGate: React.FC<{ children: React.ReactNode }> = ({ children }) => {\n  const { user, loading } = useAuthContext();\n  const location = useLocation();\n  if (loading) return <div>Loading...</div>;\n  if (!user) return <Redirect to={{ pathname: '/login', state: { from: location } }} />;\n  return <>{children}</>;\n};\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './styles/globals.css';\n\nconst rootElement = document.getElementById('root');\nif (rootElement) {\n  ReactDOM.render(\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>,\n    rootElement\n  );\n}"],"sourceRoot":""}